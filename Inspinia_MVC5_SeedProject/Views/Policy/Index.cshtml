@model IEnumerable<Inspinia_MVC5_SeedProject.Models.Policy>
@using Inspinia_MVC5_SeedProject.Models
@using Inspinia_MVC5_SeedProject.App_LocalResources

@section css{
    @Styles.Render("~/Content/iCheck")    
    @Styles.Render("~/Content/steps")
    @Styles.Render("~/Content/dataTables.bootstrap")
    @Styles.Render("~/Content/dataTables.tableTools.min")
    @Styles.Render("~/Content/dataTables.responsive")

    <style>
        body.DTTT_Print {
        background: #fff;

    }
    .DTTT_Print #page-wrapper {
        margin: 0;
        background:#fff;
    }

    button.DTTT_button, div.DTTT_button, a.DTTT_button {
        border: 1px solid #e7eaec;
        background: #fff;
        color: #676a6c;
        box-shadow: none;
        padding: 6px 8px;
    }
    button.DTTT_button:hover, div.DTTT_button:hover, a.DTTT_button:hover {
        border: 1px solid #d2d2d2;
        background: #fff;
        color: #676a6c;
        box-shadow: none;
        padding: 6px 8px;
    }

    .dataTables_filter label {
        margin-right: 5px;

    }

    </style>

    <style>
        th {
            text-align: center;
        }

        td {
            text-align: center;
        }
    </style>
}

@{
    ViewBag.Title = Resource.PolicyTitle;
}

@helper DisplaySchedule(Policy p) { 

int period = p.s_period;
string periodElement = "";
int start = p.s_enableStartTime24Format;
int end = p.s_enableEndTime24Format;

if (p.s_isDaily)
{
    periodElement = Resource.ScheduleDay;
}
else if (p.s_isHourly)
{
    periodElement = Resource.ScheduleHour;
}
else if (p.s_isMonthly)
{
    periodElement = Resource.ScheduleMonth;
}
else if (p.s_isPerMinute)
{
    periodElement = Resource.ScheduleMinute;
}
else if (p.s_isWeekly)
{
    periodElement = Resource.ScheduleWeek;
}

// per {0}     --per month
// per {0} {1}  -- per 3 months
// per {1} between {2} and {3}   --per hour between 2 and 3
// per {0} {1} between {2} and {3}   --per 3 hours between 2 and 3

string print = "";

if (start != 0 || end != 0)
{
    if (period == 1)
    {
        print = string.Format(Resource.Schedule1Between, periodElement, start, end);
    }
    else
    {
        print = string.Format(Resource.ScheduleMoreBetween, period, periodElement, start, end);
    }
}
else
{
    if (period == 1)
    {
        print = string.Format(Resource.Schedule1, periodElement);
    }
    else
    {
        print = string.Format(Resource.ScheduleMore, period, periodElement);
    }
}

@Html.Raw(print)
}

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="modalContent">
        </div>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>@Resource.PolicyTableTitle</h5>
                    <div class="ibox-tools">
                        @Html.ActionLink(Resource.IndexTablePropCreateNew, "Create", null, new { id = "btnPolicy", @class = "btn btn-primary btn-xs createBtn" })
                    </div>
                </div>
                <div class="ibox-content">

                    <table class="table table-striped table-bordered table-hover dataTables-example">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.isActive)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.activationDate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.module)
                                </th>
                                <th>
                                    @Resource.ScheduleColumnHeader
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.actionId)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.entities)
                                </th>
                                <th>
                                    @Resource.IndexTablePropAction
                                </th>
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>

                                        @if (item.isActive)
                                        {

                                            <div class="radio i-checks"><label> <input type="radio" checked="" value="@item.id" name="@item.id"> <i></i></label></div>
                                        }
                                        else
                                        {
                                            <div class="radio i-checks"><label> <input type="radio" value="@item.id" name="@item.id"> <i></i></label></div>
                                        }

                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.activationDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.module.moduleName)
                                    </td>
                                    <td>
                                        @DisplaySchedule(item)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.actionId)
                                    </td>
                                    <td>
                                        @Html.EditorFor(modelItem => item.entities)
                                    </td>
                                    <td>
                                        <a href="@Url.Action("Edit", new { id = item.id })" class="editBtn"><i class="fa fa-edit fa-lg"></i></a>
                                        <a href="@Url.Action("Delete", new { id = item.id })" class="deleteBtn"><i class="fa fa-remove fa-lg"></i></a>
                                    </td>
                                </tr>
                            }

                        </tbody>
                        <tfoot>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.isActive)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.activationDate)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.module)
                                </th>
                                <th>
                                    @Resource.ScheduleColumnHeader
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.actionId)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.entities)
                                </th>
                                <th>
                                    @Resource.IndexTablePropAction
                                </th>
                            </tr>
                        </tfoot>
                    </table>

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script type="text/javascript">
        var resources = {}; // Global variable.
    </script>

    <script>
        $(document).ready(function () {

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

            $('.dataTables-example').dataTable({
                responsive: true,
                "dom": 'T<"clear">lfrtip',
                "tableTools": {
                    "sSwfPath": "/Scripts/plugins/dataTables/swf/copy_csv_xls_pdf.swf"
                }
            });
            
            (function ($) {
                $.getJSON("@Url.Action("GetResources", "Resource")", function(data){
                    resources = data;
                });
            })(jQuery);
        });
</script>

    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/steps")
    @Scripts.Render("~/plugins/mySteps")
    @Scripts.Render("~/plugins/jquery.dataTables")
    @Scripts.Render("~/plugins/dataTables.bootstrap")
    @Scripts.Render("~/plugins/dataTables.responsive")
    @Scripts.Render("~/plugins/dataTables.tableTools.min")
}